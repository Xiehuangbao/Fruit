<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--&lt;!&ndash; 定义日志通知，将日志切面交给Spring容器管理 &ndash;&gt;
    <bean id="algorithmService" class="com.bbg.service.impl.AlgorithmImpl"></bean>
    <bean id="allLogAdvice" class="com.bbg.aop.AllLogAdvice"></bean>

    &lt;!&ndash; 进行aop配置 &ndash;&gt;
    <aop:config>
        &lt;!&ndash; 配置日志切面 &ndash;&gt;
        <aop:aspect id="logaop" ref="allLogAdvice">

            <aop:pointcut id="logpointcut" expression="execution(* com.bbg.service.impl.AlgorithmImpl*(..))" />

            &lt;!&ndash; &lt;!&ndash; 将LogAdvice日志通知中的myBeforeAdvice方法指定为前置通知 &ndash;&gt;
             <aop:before method="myBeforeAdvice" pointcut-ref="logpointcut"/>

             &lt;!&ndash; 将LogAdvice日志通知中的myAfterReturnAdvice方法指定为后置通知 &ndash;&gt;
             <aop:after-returning method="myAfterReturnAdvice" pointcut-ref="logpointcut"/>

             &lt;!&ndash; 将LogAdvice日志通知中的方法指定为异常通知 &ndash;&gt;
             <aop:after-throwing method="myThrowingAdvice" pointcut-ref="logpointcut" throwing="e" />&ndash;&gt;

            &lt;!&ndash; 将LogAdvice日志通知中的方法指定为环绕通知 &ndash;&gt;
            <aop:around method="myAroundAdvice" pointcut-ref="logpointcut"/>
        </aop:aspect>
    </aop:config>-->

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.HQS.controller" />
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="springmvc.extention.BeanArgumentResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- 引入静态文件 -->
	<mvc:resources location="/resources/" mapping="/resources/**" />  
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>


    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
      <!--解决json中文乱码-->
	  <mvc:annotation-driven>
     	<mvc:message-converters register-defaults="true">
    		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
      			<property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
    		</bean>
   		</mvc:message-converters>
     </mvc:annotation-driven>
	<!-- 配置JSON，关联jackson-xx.jar包 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	  
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>
</beans>  